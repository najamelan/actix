initSidebarItems({"enum":[["ActorState","Actor execution state"],["MailboxError","The errors that can occur during the message delivery process."],["Running",""]],"fn":[["run","Starts the system and executes the supplied future."],["spawn","Spawns a future on the current arbiter."]],"mod":[["actors","Helper actors"],["clock","A configurable source of time."],["dev","The `actix` prelude for library developers."],["fut","Custom `Future` implementation with `Actix` support"],["io",""],["msgs","Actix system messages"],["prelude","The `actix` prelude."],["registry","Actors registry"],["sync","Sync actors support"],["utils",""]],"struct":[["ActorResponse","A helper type for representing different types of message responses."],["Addr","The address of an actor."],["Arbiter","An event loop controller."],["ArbiterBuilder","A builder to create a customized arbiter."],["Context","An actor execution context."],["MessageResult","A helper type that implements the `MessageResponse` trait."],["Recipient","The `Recipient` type allows to send one specific message to an actor."],["Response","Helper type for representing different type of message responses"],["SpawnHandle","A handle to a spawned future."],["Supervisor","Actor supervisor"],["System","System is an actor which manages runtime."],["SystemRunner","Helper object that runs System's event loop"],["WeakAddr","A weakly referenced counterpart to `Addr<A>`."]],"trait":[["Actor","Actors are objects which encapsulate state and behavior."],["ActorContext","Actor execution context."],["AsyncContext","Asynchronous execution context."],["Handler","Describes how to handle messages of a specific type."],["Message","Represent message that can be handled by an actor."],["StreamHandler","Stream handler"],["Supervised","Actors with the ability to restart after failure."]],"type":[["ResponseActFuture","A specialized actor future for asynchronous message handling."],["ResponseFuture","A specialized future for asynchronous message handling."]]});