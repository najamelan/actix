var N=null,E="",T="t",U="u",searchIndex={};
var R=["Running","registry","Spawns a new thread and runs the event loop in the spawned…","Starts an actor inside a newly created arbiter.","spawnhandle","Creates a response.","result","Creates an asynchronous response.","builder","current","recipient","senderror","try_send","connected","actix::actors","Resolver","host_and_port","connect","resolver","vecdeque","socketaddr","duration","tcpconnector","Timeout","Future for the `timeout` combinator, interrupts…","Creates a \"leaf future\" from an immediate value of a…","futureresult","timeout","and_then","Chain on a computation for when a value is ready, passing…","The actor within which this future runs","into_future","The future that this type can be converted into.","The item that the future may resolve with.","The error that the future may resolve with.","into_actor","Gracefully closes the sink.","Checks if the sink is closed.","set_buffer_capacity","Sets the write buffer capacity.","Returns the `SpawnHandle` for this writer.","Actors registry","start_service","service_started","Method is called during service initialization.","from_registry","Check if actor is in registry, if so, return its address","Add new actor to the registry by address, panic if actor…","SpawnHandle","A handle to a spawned future.","The address of an actor.","Recipient","The `Recipient` type allows to send one specific message…","A `Future` which represents an asynchronous message…","An event loop controller.","An actor execution context.","ActorResponse","A helper type for representing different types of message…","MessageResult","A helper type that implements the `MessageResponse` trait.","Response","Helper type for representing different type of message…","Supervisor","Actor supervisor","System is an actor which manages runtime.","ActorState","Actor execution state","Actor is started.","Actor is running.","Stopping","Actor is stopping.","Actor is stopped.","Continue","MailboxError","The errors that can occur during the message delivery…","Context","stopping","handle","finished","add_stream","RecipientRequest","actix::dev","ResponseActFuture","A specialized actor future for asynchronous message…","ResponseFuture","A specialized future for asynchronous message handling.","Actors are objects which encapsulate state and behavior.","Actor execution context type","started","actix::prelude","Called when an actor gets polled the first time.","Called after an actor is in `Actor::Stopping` state.","Called after an actor is stopped.","Start a new asynchronous actor, returning its address.","start_default","Construct and start a new asynchronous actor, returning…","Start a new asynchronous actor given a `Context`.","ActorContext","Actor execution context.","Immediately stop processing incoming messages and switch…","terminate","Terminate actor execution unconditionally. This sets the…","Retrieve the current Actor execution state.","actorstate","AsyncContext","Asynchronous execution context.","Returns the address of the context.","Spawns a future into the context.","Spawns a future into the context, waiting for it to resolve.","Checks if the context is paused (waiting for future…","cancel_future","Cancels a spawned future.","Registers a stream with the context.","add_message_stream","Registers a stream with the context, ignoring errors.","Sends the message `msg` to self. This bypasses the mailbox…","notify_later","Sends the message `msg` to self after a specified period…","run_later","Executes a closure after a specified period of time.","run_interval","Spawns a job to execute the given closure periodically, at…","Supervised","Actors with the ability to restart after failure.","restarting","Called when the supervisor restarts a failed actor.","Describes how to handle messages of a specific type.","The type of value that this handler will return.","This method is called for every message received by this…","Represent message that can be handled by an actor.","The type of value that this message will resolved with if…","StreamHandler","Stream handler","Method is called for every message received by this Actor","Method is called when stream get polled first time.","Method is called when stream emits error.","Method is called when stream finishes.","This method register stream to an actor context and allows…","clone_into","borrow_mut","to_owned","try_from","try_into","type_id","to_string","actix::dev::channel","actix::actors::mocker","actix::actors::resolver","actix::actors::signal","actix::clock","actix::fut","actix::io","actix::msgs","actix::registry","actix::sync","actix::utils","contextparts","envelope","context","connectaddr","default","addresssender","signaltype","formatter","backtrace","set_mailbox_capacity","downgrade","addresssenderproducer","receiver","recipientrequest","Set message delivery timeout","addressreceiver","capacity","set_capacity","address","sender_producer","ArbiterBuilder","SystemRunner","ConnectAddr","ResolverError","TcpConnector","Subscribe","SignalType","ActorFuture","ActorStream","IntoActorFuture","WrapFuture","WrapStream","WriteHandler","FramedWrite","StopArbiter","StartActor","ArbiterService","SystemService","SystemRegistry","SyncArbiter","Condition","TimerFunc","IntervalFunc","SendError","ContextFutureSpawner","EnvelopeProxy","ToEnvelope","AsyncContextParts","MessageResponse","ResponseChannel","ContextParts","ContextFut","AddressSender","AddressReceiver","ProcessSignals","DefaultSignalsHandler","FutureResult","StreamAndThen","StreamFinish","StreamFold","StreamMap","StreamMapErr","StreamThen","StreamTimeout","FutureWrap","StreamWrap","SyncContext"];

searchIndex["actix"]={"doc":"Actix is a rust actors framework","i":[[3,R[48],"actix",R[49],N,N],[3,"Addr",E,R[50],N,N],[3,R[51],E,R[52],N,N],[3,"WeakAddr",E,"A weakly referenced counterpart to `Addr<A>`.",N,N],[3,"Arbiter",E,R[54],N,N],[3,R[176],E,"A builder to create a customized arbiter.",N,N],[3,R[75],E,R[55],N,N],[3,R[56],E,R[57],N,N],[3,R[58],E,R[59],N,N],[12,"0",E,E,0,N],[3,R[60],E,R[61],N,N],[3,R[62],E,R[63],N,N],[3,"System",E,R[64],N,N],[3,R[177],E,"Helper object that runs System's event loop",N,N],[4,R[65],E,R[66],N,N],[13,"Started",E,R[67],1,N],[13,R[0],E,R[68],1,N],[13,R[69],E,R[70],1,N],[13,"Stopped",E,R[71],1,N],[4,R[0],E,E,N,N],[13,"Stop",E,E,2,N],[13,R[72],E,E,2,N],[4,R[73],E,R[74],N,N],[13,"Closed",E,E,3,N],[13,R[23],E,E,3,N],[5,"run",E,"Starts the system and executes the supplied future.",N,[[["f"]]]],[5,"spawn",E,"Spawns a future on the current arbiter.",N,[[["f"]]]],[11,"alive",E,"Indicates whether the actor is alive.",1,[[["self"]],["bool"]]],[11,R[76],E,"Indicates whether the actor is stopped or stopping.",1,[[["self"]],["bool"]]],[11,"next",E,"Gets the next handle.",4,[[["self"]],[R[4]]]],[11,R[8],E,"Returns a builder object for customized arbiter creation.",5,[[],["arbiterbuilder"]]],[11,"new",E,R[2],5,[[[T]],["addr"]]],[11,"name",E,"Returns current arbiter's name",5,[[],["string"]]],[11,R[9],E,"Returns the current arbiter's address.",5,[[],["addr"]]],[11,R[1],E,"Returns the arbiter's registry,",5,[[],[R[1]]]],[11,"spawn",E,"Executes a future on the current thread.",5,[[["f"]]]],[11,"spawn_fn",E,"Executes a lazily constructed future on the current thread.",5,[[["f"]]]],[11,"start",E,R[3],5,[[["f"]],["addr"]]],[11,"name",E,"Sets the name of the arbiter.",6,[[["self"],[T]],["self"]]],[11,"stop_system_on_panic",E,"Sets the option `stop_system_on_panic` which controls…",6,[[["self"],["bool"]],["self"]]],[11,"clock",E,"Sets the clock instance that will be used by this arbiter.",6,[[["self"],["clock"]],["self"]]],[11,"build",E,R[2],6,[[["self"]],["addr",["arbiter"]]]],[11,"start",E,R[3],6,[[["self"],["f"]],["addr"]]],[11,"with_receiver",E,E,7,[[[R[171]]],["self"]]],[11,"run",E,E,7,[[["self"],["a"]],["addr"]]],[11,R[31],E,E,7,[[["self"],["a"]],["contextfut"]]],[11,R[77],E,"Returns a handle to the running future.",7,[[["self"]],[R[4]]]],[11,R[165],E,"Sets the mailbox capacity.",7,[[["self"],["usize"]]]],[11,"async",E,R[7],8,[[[T]],["self"]]],[11,"reply",E,R[5],8,[[[R[6]]],["self"]]],[11,"reply",E,R[5],9,[[[R[6]]],["self"]]],[11,"async",E,R[7],9,[[[T]],["self"]]],[11,"start",E,"Start new supervised actor in current tokio runtime.",10,[[["f"]],["addr"]]],[11,"start_in_arbiter",E,"Start new supervised actor in arbiter's thread.",10,[[["addr"],["f"]],["addr"]]],[11,R[8],E,"Build a new system with a customized tokio runtime.",11,[[],[R[8]]]],[11,"new",E,"Create new system.",11,[[[T]],["systemrunner"]]],[11,R[9],E,"Get current running system.",11,[[],["system"]]],[11,"with_current",E,"Execute function with system reference.",11,[[["f"]],["r"]]],[11,"stop",E,"Stop the system",11,[[["self"]]]],[11,"stop_with_code",E,"Stop the system with a particular exit code.",11,[[["self"],["i32"]]]],[11,"arbiter",E,"System arbiter",11,[[["self"]],["addr"]]],[11,R[1],E,"Get current system registry.",11,[[["self"]],["systemregistry"]]],[11,"run",E,"This function will start tokio runtime and will finish…",11,[[["f"]],["i32"]]],[11,"run",E,"This function will start event loop and will finish once…",12,[[["self"]],["i32"]]],[11,"block_on",E,"Execute a future and wait for result.",12,[[["self"],["f"]],[R[6]]]],[11,"new",E,E,13,[[[R[161]]],["addr"]]],[11,R[13],E,"Returns whether the actor is still alive.",13,[[["self"]],["bool"]]],[11,"do_send",E,"Sends a message unconditionally, ignoring any potential…",13,[[["self"],["m"]]]],[11,R[12],E,"Tries to send a message.",13,[[["self"],["m"]],[R[6],[R[11]]]]],[11,"send",E,"Sends an asynchronous message and waits for a response.",13,[[["self"],["m"]],["request"]]],[11,R[10],E,"Returns the `Recipient` for a specific message type.",13,[[["self"]],[R[10]]]],[11,R[166],E,"Returns a downgraded `WeakAddr`.",13,[[["self"]],["weakaddr"]]],[11,"upgrade",E,"Attempts to upgrade the `WeakAddr<A>` pointer to an…",14,[[["self"]],["option",["addr"]]]],[11,"do_send",E,"Sends a message.",15,[[["self"],["m"]],[R[6],[R[11]]]]],[11,R[12],E,"Attempts to send a message.",15,[[["self"],["m"]],[R[6],[R[11]]]]],[11,"send",E,"Sends a message and asynchronously wait for a response.",15,[[["self"],["m"]],[R[169]]]],[11,R[13],E,E,15,[[["self"]],["bool"]]],[0,"actors",E,"Helper actors",N,N],[0,"mocker",R[14],"Mocking utility actor.",N,N],[3,"Mocker",R[146],"This actor is able to wrap another actor and accept all…",N,N],[11,"mock",E,E,16,[[["box",["fnmut"]]],["mocker"]]],[0,R[18],R[14],"DNS resolver and connector utility actor",N,N],[3,"Resolve",R[147],E,N,N],[12,"name",E,E,17,N],[12,"port",E,E,17,N],[3,"Connect",E,E,N,N],[12,"name",E,E,18,N],[12,"port",E,E,18,N],[12,R[27],E,E,18,N],[3,R[178],E,E,N,N],[12,"0",E,E,19,N],[3,R[15],E,E,N,N],[3,R[180],E,"A TCP stream connector.",N,N],[4,R[179],E,E,N,N],[13,R[15],E,"Failed to resolve the hostname",20,N],[13,"InvalidInput",E,"Address is invalid",20,N],[13,R[23],E,"Connecting took too long",20,N],[13,"IoError",E,"Connection io error",20,N],[6,"Connector",E,E,N,N],[6,"ConnectorError",E,E,N,N],[11,"host",E,E,17,[[[T]],["resolve"]]],[11,R[16],E,E,17,[[[T],["u16"]],["resolve"]]],[11,"host",E,E,18,[[[T]],[R[17]]]],[11,R[16],E,E,18,[[[T],["u16"]],[R[17]]]],[11,R[27],E,"Set connect timeout",18,[[["self"],[R[21]]],[R[17]]]],[11,"new",E,E,21,[[["resolverconfig"],["resolveropts"]],[R[18]]]],[11,"new",E,E,22,[[[R[19],[R[20]]]],[R[22]]]],[11,"with_timeout",E,E,22,[[[R[19],[R[20]]],[R[21]]],[R[22]]]],[0,"signal",R[14],"An actor implementation of Unix signal handling.",N,N],[3,"Signal",R[148],"A message representing a received signal.",N,N],[12,"0",E,E,23,N],[3,R[210],E,"An actor that handles Unix signals.",N,N],[3,R[181],E,"Subscribe to process signals.",N,N],[12,"0",E,E,24,N],[3,R[211],E,"Default signals handler.",N,N],[4,R[182],E,"Represents the different types of signals a process can…",N,N],[13,"Hup",E,"`SIGHUP`",25,N],[13,"Int",E,"`SIGINT`",25,N],[13,"Term",E,"`SIGTERM`",25,N],[13,"Quit",E,"`SIGQUIT`",25,N],[13,"Child",E,"`SIGCHLD`",25,N],[0,"clock","actix","A configurable source of time.",N,N],[5,"now",R[149],"Returns an `Instant` corresponding to \"now\".",N,[[],["instant"]]],[3,"Clock",E,"A handle to a source of time.",N,N],[8,"Now",E,"Returns [`Instant`] values representing the current…",N,N],[10,"now",E,"Returns an instant corresponding to \"now\".",26,[[["self"]],["instant"]]],[0,"fut","actix","Custom `Future` implementation with `Actix` support",N,N],[3,"AndThen",R[150],"Future for the `and_then` combinator, chaining a…",N,N],[3,"FromErr",E,"Future for the `from_err` combinator, changing the error…",N,N],[3,"Finish",E,"A combinator used to convert a stream into a future; the…",N,N],[3,"Map",E,"Future for the `map` combinator, changing the type of a…",N,N],[3,"DropErr",E,E,N,N],[3,"MapErr",E,"Future for the `map_err` combinator, changing the error…",N,N],[3,R[212],E,"A future representing a value that is immediately ready.",N,N],[3,R[213],E,"A stream combinator which chains a computation onto values…",N,N],[3,R[214],E,"A combinator used to convert stream into a future, future…",N,N],[3,R[215],E,"A future used to collect all the results of a stream into…",N,N],[3,R[216],E,"A stream combinator which will change the type of a stream…",N,N],[3,R[217],E,"A stream combinator which will change the error type of a…",N,N],[3,R[218],E,"A stream combinator which chains a computation onto each…",N,N],[3,R[219],E,R[24],N,N],[3,"Then",E,"Future for the `then` combinator, chaining computations on…",N,N],[3,R[23],E,R[24],N,N],[3,R[220],E,E,N,N],[3,R[221],E,E,N,N],[4,"Either",E,"Combines two different futures yielding the same item and…",N,N],[13,"A",E,"First branch of the type",27,N],[13,"B",E,"Second branch of the type",27,N],[5,"err",E,R[25],N,[[["e"]],[R[26]]]],[5,"ok",E,R[25],N,[[[T]],[R[26]]]],[5,R[6],E,"Creates a new \"leaf future\" which will resolve with the…",N,[[[R[6]]],[R[26]]]],[5,"wrap_future",E,"Converts normal future into `ActorFuture`, allowing its…",N,[[["f"]],["futurewrap"]]],[5,"wrap_stream",E,"Converts normal stream into `ActorStream`",N,[[["s"]],["streamwrap"]]],[11,"split",E,"Splits out the homogeneous type from an either of tuples.",27,N],[11,"new",E,E,28,[[["s"]],["finish"]]],[8,R[183],E,"Trait for types which are a placeholder of a value that…",N,N],[16,"Item",E,"The type of value that this future will resolved with if…",29,N],[16,"Error",E,"The type of error that this future will resolve with if it…",29,N],[16,"Actor",E,R[30],29,N],[10,"poll",E,E,29,N],[11,"map",E,"Map this future's result to a different type, returning a…",29,[[["self"],["f"]],["map"]]],[11,"map_err",E,"Map this future's error to a different error, returning a…",29,[[["self"],["f"]],["maperr"]]],[11,"drop_err",E,"Drop this future's error, returning a new future.",29,[[["self"]],["droperr"]]],[11,"from_err",E,"Map this future's error to any error implementing `From`…",29,[[["self"]],["fromerr"]]],[11,"then",E,"Chain on a computation for when a future finished, passing…",29,[[["self"],["f"]],["then"]]],[11,R[28],E,"Execute another future after this one has resolved…",29,[[["self"],["f"]],["andthen"]]],[11,R[27],E,"Add timeout to futures chain.",29,N],[8,R[184],E,"A stream of values, not all of which may have been…",N,N],[16,"Item",E,"The type of item this stream will yield on success.",30,N],[16,"Error",E,"The type of error this stream may generate.",30,N],[16,"Actor",E,"The actor within which this stream runs.",30,N],[10,"poll",E,E,30,N],[11,"map",E,"Converts a stream of type `T` to a stream of type `U`.",30,[[["self"],["f"]],["streammap"]]],[11,"map_err",E,"Converts a stream of error type `T` to a stream of error…",30,[[["self"],["f"]],["streammaperr"]]],[11,"then",E,R[29],30,[[["self"],["f"]],["streamthen"]]],[11,R[28],E,R[29],30,[[["self"],["f"]],["streamandthen"]]],[11,"fold",E,"Execute an accumulating computation over a stream,…",30,[[["self"],[T],["f"]],["streamfold"]]],[11,R[27],E,"Add timeout to stream.",30,N],[11,"finish",E,"Converts a stream to a future that resolves when stream…",30,[[["self"]],["streamfinish"]]],[8,R[185],E,"Class of types which can be converted into an actor future.",N,N],[16,"Future",E,R[32],31,N],[16,"Item",E,R[33],31,N],[16,"Error",E,R[34],31,N],[16,"Actor",E,R[30],31,N],[10,R[31],E,"Consumes this object and produces a future.",31,N],[8,R[186],E,"Helper trait that allows conversion of normal future into…",N,N],[16,"Future",E,R[32],32,N],[16,"Item",E,R[33],32,N],[16,"Error",E,R[34],32,N],[10,R[35],E,"Convert normal future to a ActorFuture",32,N],[8,R[187],E,"Helper trait that allows conversion of normal stream into…",N,N],[16,"Stream",E,"The stream that this type can be converted into.",33,N],[16,"Item",E,R[33],33,N],[16,"Error",E,R[34],33,N],[10,R[35],E,"Convert normal stream to a ActorStream",33,N],[0,"io","actix",E,N,N],[3,"Writer",R[151],"A wrapper for `AsyncWrite` types.",N,N],[3,R[189],E,"A wrapper for the `AsyncWrite` and `Encoder` types.",N,N],[8,R[188],E,"A helper trait for write handling.",N,N],[11,"error",E,"Called when the writer emits error.",34,N],[11,R[78],E,"Called when the writer finishes.",34,N],[11,"new",E,E,35,[[[T],["c"]],["self"]]],[11,"close",E,R[36],35,[[["self"]]]],[11,"closed",E,R[37],35,[[["self"]],["bool"]]],[11,R[38],E,R[39],35,[[["self"],["usize"],["usize"]]]],[11,"write",E,"Sends an item to the sink.",35,N],[11,R[77],E,R[40],35,[[["self"]],[R[4]]]],[11,"new",E,E,36,[[[T],[U],["c"]],["self"]]],[11,"from_buffer",E,E,36,[[[T],[U],["bytesmut"],["c"]],["self"]]],[11,"close",E,R[36],36,[[["self"]]]],[11,"closed",E,R[37],36,[[["self"]],["bool"]]],[11,R[38],E,R[39],36,[[["self"],["usize"],["usize"]]]],[11,"write",E,"Writes an item to the sink.",36,N],[11,R[77],E,R[40],36,[[["self"]],[R[4]]]],[0,"msgs","actix","Actix system messages",N,N],[3,R[190],R[152],"Message to stop arbiter execution",N,N],[12,"0",E,E,37,N],[3,R[191],E,"Start actor in arbiter's thread",N,N],[3,"Execute",E,"Message to execute a function in an arbiter's thread.",N,N],[11,"new",E,E,38,[[["f"]],["self"]]],[11,"new",E,E,39,[[["f"]],["self"]]],[11,"exec",E,"Execute enclosed function",39,[[["self"]],[R[6]]]],[0,R[1],"actix",R[41],N,N],[3,"Registry",R[153],R[41],N,N],[3,R[194],E,"System wide actors registry",N,N],[8,R[192],E,"Trait defines arbiter's service.",N,N],[11,R[42],E,"Construct and start arbiter service",40,[[],["addr"]]],[11,R[43],E,R[44],40,[[["self"],[R[158]]]]],[11,R[45],E,"Get actor's address from arbiter registry",40,[[],["addr"]]],[8,R[193],E,"Trait defines system's service.",N,N],[11,R[42],E,"Construct and start system service",41,[[["addr"]],["addr"]]],[11,R[43],E,R[44],41,[[["self"],[R[158]]]]],[11,R[45],E,"Get actor's address from system registry",41,[[],["addr"]]],[11,"get",E,"Query registry for specific actor. Returns address of the…",42,[[["self"]],["addr"]]],[11,"query",E,R[46],42,[[["self"]],["option",["addr"]]]],[11,"set",E,R[47],42,[[["self"],["addr"]]]],[11,"get",E,"Return address of the service. If service actor is not…",43,[[["self"]],["addr"]]],[11,"query",E,R[46],43,[[["self"]],["option",["addr"]]]],[11,"set",E,R[47],43,[[["self"],["addr"]]]],[0,"sync","actix","Sync actors support",N,N],[3,R[195],R[154],"Sync arbiter",N,N],[3,R[222],E,"Sync actor execution context",N,N],[11,"start",E,"Start new sync arbiter with specified number of worker…",44,[[["usize"],["f"]],["addr"]]],[0,"utils","actix",E,N,N],[3,R[196],R[155],E,N,N],[3,R[197],E,"An `ActorFuture` that runs a function in the actor's…",N,N],[3,R[198],E,"An `ActorStream` that periodically runs a function in the…",N,N],[11,"wait",E,E,45,[[["self"]],[R[168]]]],[11,"set",E,E,45,[[["self"],[T]]]],[11,"new",E,"Creates a new `TimerFunc` with the given duration.",46,[[[R[21]],["f"]],["timerfunc"]]],[11,"new",E,"Creates a new `IntervalFunc` with the given interval…",47,[[[R[21]],["f"]],["intervalfunc"]]],[0,"prelude","actix","The `actix` prelude.",N,N],[3,R[48],R[89],R[49],N,N],[3,"Addr",E,R[50],N,N],[3,R[51],E,R[52],N,N],[3,R[80],E,R[53],N,N],[3,"Request",E,R[53],N,N],[3,"Arbiter",E,R[54],N,N],[3,R[75],E,R[55],N,N],[3,R[56],E,R[57],N,N],[3,R[58],E,R[59],N,N],[12,"0",E,E,0,N],[3,R[60],E,R[61],N,N],[3,R[62],E,R[63],N,N],[3,"System",E,R[64],N,N],[4,R[65],E,R[66],N,N],[13,"Started",E,R[67],1,N],[13,R[0],E,R[68],1,N],[13,R[69],E,R[70],1,N],[13,"Stopped",E,R[71],1,N],[4,R[0],E,E,N,N],[13,"Stop",E,E,2,N],[13,R[72],E,E,2,N],[4,R[73],E,R[74],N,N],[13,"Closed",E,E,3,N],[13,R[23],E,E,3,N],[4,R[199],E,E,N,N],[13,"Full",E,E,48,N],[13,"Closed",E,E,48,N],[6,R[82],E,R[83],N,N],[6,R[84],E,R[85],N,N],[8,"Actor",E,R[86],N,N],[16,R[75],E,R[87],49,N],[11,R[88],E,R[90],49,N],[11,R[76],E,R[91],49,N],[11,"stopped",E,R[92],49,N],[11,"start",E,R[93],49,[[["self"]],["addr"]]],[11,R[94],E,R[95],49,[[],["addr"]]],[11,"create",E,R[96],49,[[["f"]],["addr"]]],[8,R[97],E,R[98],N,N],[10,"stop",E,R[99],50,[[["self"]]]],[10,R[100],E,R[101],50,[[["self"]]]],[10,"state",E,R[102],50,[[["self"]],[R[103]]]],[8,R[104],E,R[105],N,N],[10,R[174],E,R[106],51,[[["self"]],["addr"]]],[10,"spawn",E,R[107],51,[[["self"],["f"]],[R[4]]]],[10,"wait",E,R[108],51,[[["self"],["f"]]]],[10,"waiting",E,R[109],51,[[["self"]],["bool"]]],[10,R[110],E,R[111],51,[[["self"],[R[4]]],["bool"]]],[11,R[79],E,R[112],51,[[["self"],["s"]],[R[4]]]],[11,R[113],E,R[114],51,[[["self"],["s"]]]],[11,"notify",E,R[115],51,[[["self"],["m"]]]],[11,R[116],E,R[117],51,[[["self"],["m"],[R[21]]],[R[4]]]],[11,R[118],E,R[119],51,[[["self"],[R[21]],["f"]],[R[4]]]],[11,R[120],E,R[121],51,[[["self"],[R[21]],["f"]],[R[4]]]],[8,R[122],E,R[123],N,N],[11,R[124],E,R[125],52,N],[8,R[200],E,"Helper trait which can spawn a future into the actor's…",N,N],[10,"spawn",E,"Spawns the future into the given context.",53,N],[10,"wait",E,"Spawns the future into the given context, waiting for it…",53,N],[8,"Handler",E,R[126],N,N],[16,"Result",E,R[127],54,N],[10,R[77],E,R[128],54,N],[8,"Message",E,R[129],N,N],[16,"Result",E,R[130],55,N],[8,R[131],E,R[132],N,N],[10,R[77],E,R[133],56,N],[11,R[88],E,R[134],56,N],[11,"error",E,R[135],56,N],[11,R[78],E,R[136],56,N],[11,R[79],E,R[137],56,N],[0,"dev","actix","The `actix` prelude for library developers.",N,N],[3,"Envelope",R[81],E,N,N],[3,R[80],E,R[53],N,N],[3,"Request",E,R[53],N,N],[3,R[207],E,E,N,N],[3,R[206],E,E,N,N],[3,"Mailbox",E,E,N,N],[0,"channel",E,E,N,N],[3,R[209],R[145],"The receiving end of a channel which implements the…",N,N],[3,R[208],E,"The transmission end of a channel which is used to send…",N,N],[5,"channel",E,"Creates an in-memory channel implementation of the…",N,N],[8,R[201],R[81],E,N,N],[16,"Actor",E,E,57,N],[10,R[77],E,"handle message within new actor and context",57,N],[8,R[202],E,"Converter trait, packs message into a suitable envelope.",N,N],[10,"pack",E,"Pack message into suitable envelope",58,[[["m"],["option",["sender"]]],[R[157]]]],[8,R[203],E,E,N,N],[10,"parts",E,E,59,[[["self"]],[R[156]]]],[8,R[204],E,"A trait which defines message responses.",N,N],[10,R[77],E,E,60,N],[8,R[205],E,"A trait that defines a message response channel.",N,N],[10,"is_canceled",E,E,61,[[["self"]],["bool"]]],[10,"send",E,E,61,N],[6,R[82],"actix",R[83],N,N],[6,R[84],E,R[85],N,N],[8,"Actor",E,R[86],N,N],[16,R[75],E,R[87],49,N],[11,R[88],R[89],R[90],49,N],[11,R[76],E,R[91],49,N],[11,"stopped",E,R[92],49,N],[11,"start",E,R[93],49,[[["self"]],["addr"]]],[11,R[94],E,R[95],49,[[],["addr"]]],[11,"create",E,R[96],49,[[["f"]],["addr"]]],[8,R[97],"actix",R[98],N,N],[10,"stop",E,R[99],50,[[["self"]]]],[10,R[100],E,R[101],50,[[["self"]]]],[10,"state",E,R[102],50,[[["self"]],[R[103]]]],[8,R[104],E,R[105],N,N],[10,R[174],E,R[106],51,[[["self"]],["addr"]]],[10,"spawn",E,R[107],51,[[["self"],["f"]],[R[4]]]],[10,"wait",E,R[108],51,[[["self"],["f"]]]],[10,"waiting",E,R[109],51,[[["self"]],["bool"]]],[10,R[110],E,R[111],51,[[["self"],[R[4]]],["bool"]]],[11,R[79],R[89],R[112],51,[[["self"],["s"]],[R[4]]]],[11,R[113],E,R[114],51,[[["self"],["s"]]]],[11,"notify",E,R[115],51,[[["self"],["m"]]]],[11,R[116],E,R[117],51,[[["self"],["m"],[R[21]]],[R[4]]]],[11,R[118],E,R[119],51,[[["self"],[R[21]],["f"]],[R[4]]]],[11,R[120],E,R[121],51,[[["self"],[R[21]],["f"]],[R[4]]]],[8,R[122],"actix",R[123],N,N],[11,R[124],R[89],R[125],52,N],[8,"Handler","actix",R[126],N,N],[16,"Result",E,R[127],54,N],[10,R[77],E,R[128],54,N],[8,"Message",E,R[129],N,N],[16,"Result",E,R[130],55,N],[8,R[131],E,R[132],N,N],[10,R[77],E,R[133],56,N],[11,R[88],R[89],R[134],56,N],[11,"error",E,R[135],56,N],[11,R[78],E,R[136],56,N],[11,R[79],E,R[137],56,N],[11,"from","actix",E,4,[[[T]],[T]]],[11,"into",E,E,4,[[["self"]],[U]]],[11,R[140],E,E,4,[[["self"]],[T]]],[11,R[138],E,E,4,N],[11,R[141],E,E,4,[[[U]],[R[6]]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[143],E,E,4,[[["self"]],["typeid"]]],[11,R[139],E,E,4,[[["self"]],[T]]],[11,R[142],E,E,4,[[["self"]],[R[6]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[["self"]],[U]]],[11,R[140],E,E,13,[[["self"]],[T]]],[11,R[138],E,E,13,N],[11,R[141],E,E,13,[[[U]],[R[6]]]],[11,"borrow",E,E,13,[[["self"]],[T]]],[11,R[143],E,E,13,[[["self"]],["typeid"]]],[11,R[139],E,E,13,[[["self"]],[T]]],[11,R[142],E,E,13,[[["self"]],[R[6]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[["self"]],[U]]],[11,R[140],E,E,15,[[["self"]],[T]]],[11,R[138],E,E,15,N],[11,R[141],E,E,15,[[[U]],[R[6]]]],[11,"borrow",E,E,15,[[["self"]],[T]]],[11,R[143],E,E,15,[[["self"]],["typeid"]]],[11,R[139],E,E,15,[[["self"]],[T]]],[11,R[142],E,E,15,[[["self"]],[R[6]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[["self"]],[U]]],[11,R[141],E,E,14,[[[U]],[R[6]]]],[11,"borrow",E,E,14,[[["self"]],[T]]],[11,R[143],E,E,14,[[["self"]],["typeid"]]],[11,R[139],E,E,14,[[["self"]],[T]]],[11,R[142],E,E,14,[[["self"]],[R[6]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[["self"]],[U]]],[11,R[141],E,E,5,[[[U]],[R[6]]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[143],E,E,5,[[["self"]],["typeid"]]],[11,R[139],E,E,5,[[["self"]],[T]]],[11,R[142],E,E,5,[[["self"]],[R[6]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[["self"]],[U]]],[11,R[141],E,E,6,[[[U]],[R[6]]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[143],E,E,6,[[["self"]],["typeid"]]],[11,R[139],E,E,6,[[["self"]],[T]]],[11,R[142],E,E,6,[[["self"]],[R[6]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[["self"]],[U]]],[11,R[141],E,E,7,[[[U]],[R[6]]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[143],E,E,7,[[["self"]],["typeid"]]],[11,R[139],E,E,7,[[["self"]],[T]]],[11,R[142],E,E,7,[[["self"]],[R[6]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[["self"]],[U]]],[11,R[141],E,E,9,[[[U]],[R[6]]]],[11,"borrow",E,E,9,[[["self"]],[T]]],[11,R[143],E,E,9,[[["self"]],["typeid"]]],[11,R[139],E,E,9,[[["self"]],[T]]],[11,R[142],E,E,9,[[["self"]],[R[6]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[141],E,E,0,[[[U]],[R[6]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[143],E,E,0,[[["self"]],["typeid"]]],[11,R[139],E,E,0,[[["self"]],[T]]],[11,R[142],E,E,0,[[["self"]],[R[6]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[["self"]],[U]]],[11,R[141],E,E,8,[[[U]],[R[6]]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[143],E,E,8,[[["self"]],["typeid"]]],[11,R[139],E,E,8,[[["self"]],[T]]],[11,R[142],E,E,8,[[["self"]],[R[6]]]],[11,R[35],E,E,10,N],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[["self"]],[U]]],[11,R[141],E,E,10,[[[U]],[R[6]]]],[11,"borrow",E,E,10,[[["self"]],[T]]],[11,R[143],E,E,10,[[["self"]],["typeid"]]],[11,R[139],E,E,10,[[["self"]],[T]]],[11,R[142],E,E,10,[[["self"]],[R[6]]]],[11,R[31],E,E,10,[[["self"]],["f"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[["self"]],[U]]],[11,R[140],E,E,11,[[["self"]],[T]]],[11,R[138],E,E,11,N],[11,R[141],E,E,11,[[[U]],[R[6]]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[143],E,E,11,[[["self"]],["typeid"]]],[11,R[139],E,E,11,[[["self"]],[T]]],[11,R[142],E,E,11,[[["self"]],[R[6]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[["self"]],[U]]],[11,R[141],E,E,12,[[[U]],[R[6]]]],[11,"borrow",E,E,12,[[["self"]],[T]]],[11,R[143],E,E,12,[[["self"]],["typeid"]]],[11,R[139],E,E,12,[[["self"]],[T]]],[11,R[142],E,E,12,[[["self"]],[R[6]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[140],E,E,1,[[["self"]],[T]]],[11,R[138],E,E,1,N],[11,R[141],E,E,1,[[[U]],[R[6]]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[143],E,E,1,[[["self"]],["typeid"]]],[11,R[139],E,E,1,[[["self"]],[T]]],[11,R[142],E,E,1,[[["self"]],[R[6]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[140],E,E,2,[[["self"]],[T]]],[11,R[138],E,E,2,N],[11,R[141],E,E,2,[[[U]],[R[6]]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[143],E,E,2,[[["self"]],["typeid"]]],[11,R[139],E,E,2,[[["self"]],[T]]],[11,R[142],E,E,2,[[["self"]],[R[6]]]],[11,R[144],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[141],E,E,3,[[[U]],[R[6]]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[143],E,E,3,[[["self"]],["typeid"]]],[11,R[139],E,E,3,[[["self"]],[T]]],[11,R[142],E,E,3,[[["self"]],[R[6]]]],[11,"as_fail",E,E,3,[[["self"]],["fail"]]],[11,"from",R[81],E,62,[[[T]],[T]]],[11,"into",E,E,62,[[["self"]],[U]]],[11,R[141],E,E,62,[[[U]],[R[6]]]],[11,"borrow",E,E,62,[[["self"]],[T]]],[11,R[143],E,E,62,[[["self"]],["typeid"]]],[11,R[139],E,E,62,[[["self"]],[T]]],[11,R[142],E,E,62,[[["self"]],[R[6]]]],[11,R[35],E,E,63,N],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[["self"]],[U]]],[11,R[141],E,E,63,[[[U]],[R[6]]]],[11,"borrow",E,E,63,[[["self"]],[T]]],[11,R[143],E,E,63,[[["self"]],["typeid"]]],[11,R[139],E,E,63,[[["self"]],[T]]],[11,R[142],E,E,63,[[["self"]],[R[6]]]],[11,R[31],E,E,63,[[["self"]],["f"]]],[11,R[144],R[89],E,48,[[["self"]],["string"]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[["self"]],[U]]],[11,R[141],E,E,48,[[[U]],[R[6]]]],[11,"borrow",E,E,48,[[["self"]],[T]]],[11,R[143],E,E,48,[[["self"]],["typeid"]]],[11,R[139],E,E,48,[[["self"]],[T]]],[11,R[142],E,E,48,[[["self"]],[R[6]]]],[11,"as_fail",E,E,48,[[["self"]],["fail"]]],[11,"from",R[145],E,64,[[[T]],[T]]],[11,"into",E,E,64,[[["self"]],[U]]],[11,R[140],E,E,64,[[["self"]],[T]]],[11,R[138],E,E,64,N],[11,R[141],E,E,64,[[[U]],[R[6]]]],[11,"borrow",E,E,64,[[["self"]],[T]]],[11,R[143],E,E,64,[[["self"]],["typeid"]]],[11,R[139],E,E,64,[[["self"]],[T]]],[11,R[142],E,E,64,[[["self"]],[R[6]]]],[11,R[35],E,E,65,N],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[["self"]],[U]]],[11,R[141],E,E,65,[[[U]],[R[6]]]],[11,"borrow",E,E,65,[[["self"]],[T]]],[11,R[143],E,E,65,[[["self"]],["typeid"]]],[11,R[139],E,E,65,[[["self"]],[T]]],[11,R[142],E,E,65,[[["self"]],[R[6]]]],[11,"from",R[81],E,66,[[[T]],[T]]],[11,"into",E,E,66,[[["self"]],[U]]],[11,R[141],E,E,66,[[[U]],[R[6]]]],[11,"borrow",E,E,66,[[["self"]],[T]]],[11,R[143],E,E,66,[[["self"]],["typeid"]]],[11,R[139],E,E,66,[[["self"]],[T]]],[11,R[142],E,E,66,[[["self"]],[R[6]]]],[11,R[35],R[89],E,67,N],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[["self"]],[U]]],[11,R[141],E,E,67,[[[U]],[R[6]]]],[11,"borrow",E,E,67,[[["self"]],[T]]],[11,R[143],E,E,67,[[["self"]],["typeid"]]],[11,R[139],E,E,67,[[["self"]],[T]]],[11,R[142],E,E,67,[[["self"]],[R[6]]]],[11,R[31],E,E,67,[[["self"]],["f"]]],[11,R[35],E,E,68,N],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[["self"]],[U]]],[11,R[141],E,E,68,[[[U]],[R[6]]]],[11,"borrow",E,E,68,[[["self"]],[T]]],[11,R[143],E,E,68,[[["self"]],["typeid"]]],[11,R[139],E,E,68,[[["self"]],[T]]],[11,R[142],E,E,68,[[["self"]],[R[6]]]],[11,R[31],E,E,68,[[["self"]],["f"]]],[11,"from",R[81],E,69,[[[T]],[T]]],[11,"into",E,E,69,[[["self"]],[U]]],[11,R[141],E,E,69,[[[U]],[R[6]]]],[11,"borrow",E,E,69,[[["self"]],[T]]],[11,R[143],E,E,69,[[["self"]],["typeid"]]],[11,R[139],E,E,69,[[["self"]],[T]]],[11,R[142],E,E,69,[[["self"]],[R[6]]]],[11,"from",R[146],E,16,[[[T]],[T]]],[11,"into",E,E,16,[[["self"]],[U]]],[11,R[141],E,E,16,[[[U]],[R[6]]]],[11,"borrow",E,E,16,[[["self"]],[T]]],[11,R[143],E,E,16,[[["self"]],["typeid"]]],[11,R[139],E,E,16,[[["self"]],[T]]],[11,R[142],E,E,16,[[["self"]],[R[6]]]],[11,"from",R[147],E,17,[[[T]],[T]]],[11,"into",E,E,17,[[["self"]],[U]]],[11,R[141],E,E,17,[[[U]],[R[6]]]],[11,"borrow",E,E,17,[[["self"]],[T]]],[11,R[143],E,E,17,[[["self"]],["typeid"]]],[11,R[139],E,E,17,[[["self"]],[T]]],[11,R[142],E,E,17,[[["self"]],[R[6]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[["self"]],[U]]],[11,R[141],E,E,18,[[[U]],[R[6]]]],[11,"borrow",E,E,18,[[["self"]],[T]]],[11,R[143],E,E,18,[[["self"]],["typeid"]]],[11,R[139],E,E,18,[[["self"]],[T]]],[11,R[142],E,E,18,[[["self"]],[R[6]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[["self"]],[U]]],[11,R[141],E,E,19,[[[U]],[R[6]]]],[11,"borrow",E,E,19,[[["self"]],[T]]],[11,R[143],E,E,19,[[["self"]],["typeid"]]],[11,R[139],E,E,19,[[["self"]],[T]]],[11,R[142],E,E,19,[[["self"]],[R[6]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[["self"]],[U]]],[11,R[141],E,E,21,[[[U]],[R[6]]]],[11,"borrow",E,E,21,[[["self"]],[T]]],[11,R[143],E,E,21,[[["self"]],["typeid"]]],[11,R[139],E,E,21,[[["self"]],[T]]],[11,R[142],E,E,21,[[["self"]],[R[6]]]],[11,R[31],E,E,22,[[["self"]],["f"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[["self"]],[U]]],[11,R[141],E,E,22,[[[U]],[R[6]]]],[11,"borrow",E,E,22,[[["self"]],[T]]],[11,R[143],E,E,22,[[["self"]],["typeid"]]],[11,R[139],E,E,22,[[["self"]],[T]]],[11,R[142],E,E,22,[[["self"]],[R[6]]]],[11,R[144],E,E,20,[[["self"]],["string"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[["self"]],[U]]],[11,R[141],E,E,20,[[[U]],[R[6]]]],[11,"borrow",E,E,20,[[["self"]],[T]]],[11,R[143],E,E,20,[[["self"]],["typeid"]]],[11,R[139],E,E,20,[[["self"]],[T]]],[11,R[142],E,E,20,[[["self"]],[R[6]]]],[11,"as_fail",E,E,20,[[["self"]],["fail"]]],[11,"from",R[148],E,23,[[[T]],[T]]],[11,"into",E,E,23,[[["self"]],[U]]],[11,R[141],E,E,23,[[[U]],[R[6]]]],[11,"borrow",E,E,23,[[["self"]],[T]]],[11,R[143],E,E,23,[[["self"]],["typeid"]]],[11,R[139],E,E,23,[[["self"]],[T]]],[11,R[142],E,E,23,[[["self"]],[R[6]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[["self"]],[U]]],[11,R[141],E,E,70,[[[U]],[R[6]]]],[11,"borrow",E,E,70,[[["self"]],[T]]],[11,R[143],E,E,70,[[["self"]],["typeid"]]],[11,R[139],E,E,70,[[["self"]],[T]]],[11,R[142],E,E,70,[[["self"]],[R[6]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[["self"]],[U]]],[11,R[141],E,E,24,[[[U]],[R[6]]]],[11,"borrow",E,E,24,[[["self"]],[T]]],[11,R[143],E,E,24,[[["self"]],["typeid"]]],[11,R[139],E,E,24,[[["self"]],[T]]],[11,R[142],E,E,24,[[["self"]],[R[6]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[["self"]],[U]]],[11,R[141],E,E,71,[[[U]],[R[6]]]],[11,"borrow",E,E,71,[[["self"]],[T]]],[11,R[143],E,E,71,[[["self"]],["typeid"]]],[11,R[139],E,E,71,[[["self"]],[T]]],[11,R[142],E,E,71,[[["self"]],[R[6]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[["self"]],[U]]],[11,R[140],E,E,25,[[["self"]],[T]]],[11,R[138],E,E,25,N],[11,R[141],E,E,25,[[[U]],[R[6]]]],[11,"borrow",E,E,25,[[["self"]],[T]]],[11,R[143],E,E,25,[[["self"]],["typeid"]]],[11,R[139],E,E,25,[[["self"]],[T]]],[11,R[142],E,E,25,[[["self"]],[R[6]]]],[11,"from",R[149],E,72,[[[T]],[T]]],[11,"into",E,E,72,[[["self"]],[U]]],[11,R[140],E,E,72,[[["self"]],[T]]],[11,R[138],E,E,72,N],[11,R[141],E,E,72,[[[U]],[R[6]]]],[11,"borrow",E,E,72,[[["self"]],[T]]],[11,R[143],E,E,72,[[["self"]],["typeid"]]],[11,R[139],E,E,72,[[["self"]],[T]]],[11,R[142],E,E,72,[[["self"]],[R[6]]]],[11,R[31],R[150],E,73,[[["self"]],["f"]]],[11,"from",E,E,73,[[[T]],[T]]],[11,"into",E,E,73,[[["self"]],[U]]],[11,R[141],E,E,73,[[[U]],[R[6]]]],[11,"borrow",E,E,73,[[["self"]],[T]]],[11,R[143],E,E,73,[[["self"]],["typeid"]]],[11,R[139],E,E,73,[[["self"]],[T]]],[11,R[142],E,E,73,[[["self"]],[R[6]]]],[11,R[31],E,E,74,[[["self"]],["f"]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[["self"]],[U]]],[11,R[141],E,E,74,[[[U]],[R[6]]]],[11,"borrow",E,E,74,[[["self"]],[T]]],[11,R[143],E,E,74,[[["self"]],["typeid"]]],[11,R[139],E,E,74,[[["self"]],[T]]],[11,R[142],E,E,74,[[["self"]],[R[6]]]],[11,R[35],E,E,28,N],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[["self"]],[U]]],[11,R[141],E,E,28,[[[U]],[R[6]]]],[11,"borrow",E,E,28,[[["self"]],[T]]],[11,R[143],E,E,28,[[["self"]],["typeid"]]],[11,R[139],E,E,28,[[["self"]],[T]]],[11,R[142],E,E,28,[[["self"]],[R[6]]]],[11,R[31],E,E,28,[[["self"]],["f"]]],[11,R[31],E,E,75,[[["self"]],["f"]]],[11,"from",E,E,75,[[[T]],[T]]],[11,"into",E,E,75,[[["self"]],[U]]],[11,R[141],E,E,75,[[[U]],[R[6]]]],[11,"borrow",E,E,75,[[["self"]],[T]]],[11,R[143],E,E,75,[[["self"]],["typeid"]]],[11,R[139],E,E,75,[[["self"]],[T]]],[11,R[142],E,E,75,[[["self"]],[R[6]]]],[11,R[31],E,E,76,[[["self"]],["f"]]],[11,"from",E,E,76,[[[T]],[T]]],[11,"into",E,E,76,[[["self"]],[U]]],[11,R[141],E,E,76,[[[U]],[R[6]]]],[11,"borrow",E,E,76,[[["self"]],[T]]],[11,R[143],E,E,76,[[["self"]],["typeid"]]],[11,R[139],E,E,76,[[["self"]],[T]]],[11,R[142],E,E,76,[[["self"]],[R[6]]]],[11,R[31],E,E,77,[[["self"]],["f"]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[["self"]],[U]]],[11,R[141],E,E,77,[[[U]],[R[6]]]],[11,"borrow",E,E,77,[[["self"]],[T]]],[11,R[143],E,E,77,[[["self"]],["typeid"]]],[11,R[139],E,E,77,[[["self"]],[T]]],[11,R[142],E,E,77,[[["self"]],[R[6]]]],[11,R[31],E,E,78,[[["self"]],["f"]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[["self"]],[U]]],[11,R[141],E,E,78,[[[U]],[R[6]]]],[11,"borrow",E,E,78,[[["self"]],[T]]],[11,R[143],E,E,78,[[["self"]],["typeid"]]],[11,R[139],E,E,78,[[["self"]],[T]]],[11,R[142],E,E,78,[[["self"]],[R[6]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,"into",E,E,79,[[["self"]],[U]]],[11,R[141],E,E,79,[[[U]],[R[6]]]],[11,"borrow",E,E,79,[[["self"]],[T]]],[11,R[143],E,E,79,[[["self"]],["typeid"]]],[11,R[139],E,E,79,[[["self"]],[T]]],[11,R[142],E,E,79,[[["self"]],[R[6]]]],[11,R[31],E,E,80,[[["self"]],["f"]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[["self"]],[U]]],[11,R[141],E,E,80,[[[U]],[R[6]]]],[11,"borrow",E,E,80,[[["self"]],[T]]],[11,R[143],E,E,80,[[["self"]],["typeid"]]],[11,R[139],E,E,80,[[["self"]],[T]]],[11,R[142],E,E,80,[[["self"]],[R[6]]]],[11,R[31],E,E,81,[[["self"]],["f"]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[["self"]],[U]]],[11,R[141],E,E,81,[[[U]],[R[6]]]],[11,"borrow",E,E,81,[[["self"]],[T]]],[11,R[143],E,E,81,[[["self"]],["typeid"]]],[11,R[139],E,E,81,[[["self"]],[T]]],[11,R[142],E,E,81,[[["self"]],[R[6]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,"into",E,E,82,[[["self"]],[U]]],[11,R[141],E,E,82,[[[U]],[R[6]]]],[11,"borrow",E,E,82,[[["self"]],[T]]],[11,R[143],E,E,82,[[["self"]],["typeid"]]],[11,R[139],E,E,82,[[["self"]],[T]]],[11,R[142],E,E,82,[[["self"]],[R[6]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,"into",E,E,83,[[["self"]],[U]]],[11,R[141],E,E,83,[[[U]],[R[6]]]],[11,"borrow",E,E,83,[[["self"]],[T]]],[11,R[143],E,E,83,[[["self"]],["typeid"]]],[11,R[139],E,E,83,[[["self"]],[T]]],[11,R[142],E,E,83,[[["self"]],[R[6]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,"into",E,E,84,[[["self"]],[U]]],[11,R[141],E,E,84,[[[U]],[R[6]]]],[11,"borrow",E,E,84,[[["self"]],[T]]],[11,R[143],E,E,84,[[["self"]],["typeid"]]],[11,R[139],E,E,84,[[["self"]],[T]]],[11,R[142],E,E,84,[[["self"]],[R[6]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,"into",E,E,85,[[["self"]],[U]]],[11,R[141],E,E,85,[[[U]],[R[6]]]],[11,"borrow",E,E,85,[[["self"]],[T]]],[11,R[143],E,E,85,[[["self"]],["typeid"]]],[11,R[139],E,E,85,[[["self"]],[T]]],[11,R[142],E,E,85,[[["self"]],[R[6]]]],[11,R[31],E,E,86,[[["self"]],["f"]]],[11,"from",E,E,86,[[[T]],[T]]],[11,"into",E,E,86,[[["self"]],[U]]],[11,R[141],E,E,86,[[[U]],[R[6]]]],[11,"borrow",E,E,86,[[["self"]],[T]]],[11,R[143],E,E,86,[[["self"]],["typeid"]]],[11,R[139],E,E,86,[[["self"]],[T]]],[11,R[142],E,E,86,[[["self"]],[R[6]]]],[11,R[31],E,E,87,[[["self"]],["f"]]],[11,"from",E,E,87,[[[T]],[T]]],[11,"into",E,E,87,[[["self"]],[U]]],[11,R[141],E,E,87,[[[U]],[R[6]]]],[11,"borrow",E,E,87,[[["self"]],[T]]],[11,R[143],E,E,87,[[["self"]],["typeid"]]],[11,R[139],E,E,87,[[["self"]],[T]]],[11,R[142],E,E,87,[[["self"]],[R[6]]]],[11,R[31],E,E,88,[[["self"]],["f"]]],[11,"from",E,E,88,[[[T]],[T]]],[11,"into",E,E,88,[[["self"]],[U]]],[11,R[141],E,E,88,[[[U]],[R[6]]]],[11,"borrow",E,E,88,[[["self"]],[T]]],[11,R[143],E,E,88,[[["self"]],["typeid"]]],[11,R[139],E,E,88,[[["self"]],[T]]],[11,R[142],E,E,88,[[["self"]],[R[6]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,"into",E,E,89,[[["self"]],[U]]],[11,R[141],E,E,89,[[[U]],[R[6]]]],[11,"borrow",E,E,89,[[["self"]],[T]]],[11,R[143],E,E,89,[[["self"]],["typeid"]]],[11,R[139],E,E,89,[[["self"]],[T]]],[11,R[142],E,E,89,[[["self"]],[R[6]]]],[11,R[31],E,E,27,[[["self"]],["f"]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[["self"]],[U]]],[11,R[141],E,E,27,[[[U]],[R[6]]]],[11,"borrow",E,E,27,[[["self"]],[T]]],[11,R[143],E,E,27,[[["self"]],["typeid"]]],[11,R[139],E,E,27,[[["self"]],[T]]],[11,R[142],E,E,27,[[["self"]],[R[6]]]],[11,"from",R[151],E,35,[[[T]],[T]]],[11,"into",E,E,35,[[["self"]],[U]]],[11,R[141],E,E,35,[[[U]],[R[6]]]],[11,"borrow",E,E,35,[[["self"]],[T]]],[11,R[143],E,E,35,[[["self"]],["typeid"]]],[11,R[139],E,E,35,[[["self"]],[T]]],[11,R[142],E,E,35,[[["self"]],[R[6]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[["self"]],[U]]],[11,R[141],E,E,36,[[[U]],[R[6]]]],[11,"borrow",E,E,36,[[["self"]],[T]]],[11,R[143],E,E,36,[[["self"]],["typeid"]]],[11,R[139],E,E,36,[[["self"]],[T]]],[11,R[142],E,E,36,[[["self"]],[R[6]]]],[11,"from",R[152],E,37,[[[T]],[T]]],[11,"into",E,E,37,[[["self"]],[U]]],[11,R[141],E,E,37,[[[U]],[R[6]]]],[11,"borrow",E,E,37,[[["self"]],[T]]],[11,R[143],E,E,37,[[["self"]],["typeid"]]],[11,R[139],E,E,37,[[["self"]],[T]]],[11,R[142],E,E,37,[[["self"]],[R[6]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[["self"]],[U]]],[11,R[141],E,E,38,[[[U]],[R[6]]]],[11,"borrow",E,E,38,[[["self"]],[T]]],[11,R[143],E,E,38,[[["self"]],["typeid"]]],[11,R[139],E,E,38,[[["self"]],[T]]],[11,R[142],E,E,38,[[["self"]],[R[6]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[["self"]],[U]]],[11,R[141],E,E,39,[[[U]],[R[6]]]],[11,"borrow",E,E,39,[[["self"]],[T]]],[11,R[143],E,E,39,[[["self"]],["typeid"]]],[11,R[139],E,E,39,[[["self"]],[T]]],[11,R[142],E,E,39,[[["self"]],[R[6]]]],[11,"from",R[153],E,42,[[[T]],[T]]],[11,"into",E,E,42,[[["self"]],[U]]],[11,R[140],E,E,42,[[["self"]],[T]]],[11,R[138],E,E,42,N],[11,R[141],E,E,42,[[[U]],[R[6]]]],[11,"borrow",E,E,42,[[["self"]],[T]]],[11,R[143],E,E,42,[[["self"]],["typeid"]]],[11,R[139],E,E,42,[[["self"]],[T]]],[11,R[142],E,E,42,[[["self"]],[R[6]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[["self"]],[U]]],[11,R[140],E,E,43,[[["self"]],[T]]],[11,R[138],E,E,43,N],[11,R[141],E,E,43,[[[U]],[R[6]]]],[11,"borrow",E,E,43,[[["self"]],[T]]],[11,R[143],E,E,43,[[["self"]],["typeid"]]],[11,R[139],E,E,43,[[["self"]],[T]]],[11,R[142],E,E,43,[[["self"]],[R[6]]]],[11,R[35],R[154],E,44,N],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[["self"]],[U]]],[11,R[141],E,E,44,[[[U]],[R[6]]]],[11,"borrow",E,E,44,[[["self"]],[T]]],[11,R[143],E,E,44,[[["self"]],["typeid"]]],[11,R[139],E,E,44,[[["self"]],[T]]],[11,R[142],E,E,44,[[["self"]],[R[6]]]],[11,R[31],E,E,44,[[["self"]],["f"]]],[11,"from",E,E,90,[[[T]],[T]]],[11,"into",E,E,90,[[["self"]],[U]]],[11,R[141],E,E,90,[[[U]],[R[6]]]],[11,"borrow",E,E,90,[[["self"]],[T]]],[11,R[143],E,E,90,[[["self"]],["typeid"]]],[11,R[139],E,E,90,[[["self"]],[T]]],[11,R[142],E,E,90,[[["self"]],[R[6]]]],[11,"from",R[155],E,45,[[[T]],[T]]],[11,"into",E,E,45,[[["self"]],[U]]],[11,R[141],E,E,45,[[[U]],[R[6]]]],[11,"borrow",E,E,45,[[["self"]],[T]]],[11,R[143],E,E,45,[[["self"]],["typeid"]]],[11,R[139],E,E,45,[[["self"]],[T]]],[11,R[142],E,E,45,[[["self"]],[R[6]]]],[11,R[31],E,E,46,[[["self"]],["f"]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[["self"]],[U]]],[11,R[141],E,E,46,[[[U]],[R[6]]]],[11,"borrow",E,E,46,[[["self"]],[T]]],[11,R[143],E,E,46,[[["self"]],["typeid"]]],[11,R[139],E,E,46,[[["self"]],[T]]],[11,R[142],E,E,46,[[["self"]],[R[6]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[["self"]],[U]]],[11,R[141],E,E,47,[[[U]],[R[6]]]],[11,"borrow",E,E,47,[[["self"]],[T]]],[11,R[143],E,E,47,[[["self"]],["typeid"]]],[11,R[139],E,E,47,[[["self"]],[T]]],[11,R[142],E,E,47,[[["self"]],[R[6]]]],[11,R[160],R[149],E,72,[[],["clock"]]],[11,"fmt",E,E,72,[[["self"],[R[163]]],[R[6],["error"]]]],[11,"clone",E,E,72,[[["self"]],["clock"]]],[11,R[88],R[147],E,21,N],[11,R[88],R[148],E,71,N],[11,"stop","actix",E,7,[[["self"]]]],[11,R[100],E,E,7,[[["self"]]]],[11,"state",E,E,7,[[["self"]],[R[103]]]],[11,"stop",R[154],"Stop current actor. SyncContext creates and starts new…",90,[[["self"]]]],[11,R[100],E,"Terminate actor execution. SyncContext creates and starts…",90,[[["self"]]]],[11,"state",E,R[66],90,[[["self"]],[R[103]]]],[11,"spawn","actix",E,7,[[["self"],["f"]],[R[4]]]],[11,"wait",E,E,7,[[["self"],["f"]]]],[11,"waiting",E,E,7,[[["self"]],["bool"]]],[11,R[110],E,E,7,[[["self"],[R[4]]],["bool"]]],[11,R[174],E,E,7,[[["self"]],["addr"]]],[11,"parts",E,E,7,[[["self"]],[R[156]]]],[11,R[77],E,E,5,[[["self"],["stoparbiter"],[R[158]]]]],[11,R[77],E,E,5,[[["self"],["startactor"],[R[158]]],["addr"]]],[11,R[77],E,E,5,[[["self"],["execute"],[R[158]]],[R[6]]]],[11,R[77],R[146],E,16,N],[11,R[77],R[147],E,21,N],[11,R[77],E,E,21,N],[11,R[77],E,E,21,N],[11,R[77],R[148],E,70,N],[11,R[77],E,E,71,N],[11,R[77],"actix",E,0,N],[11,R[77],E,E,13,N],[11,R[77],E,E,91,N],[11,R[77],E,E,92,N],[11,R[77],E,E,8,N],[11,R[77],E,E,9,N],[11,"pack",E,E,7,[[["m"],["option",["sender"]]],[R[157]]]],[11,"pack",R[154],E,90,[[["m"],["option",["syncsender"]]],[R[157]]]],[11,R[77],R[81],E,66,N],[11,"poll",R[147],E,22,[[["self"],[R[18]],[R[158]]],["poll"]]],[11,"poll",R[150],E,73,N],[11,"poll",E,E,27,N],[11,"poll",E,E,74,N],[11,"poll",E,E,75,N],[11,"poll",E,E,77,N],[11,"poll",E,E,76,N],[11,"poll",E,E,78,N],[11,"poll",E,E,80,N],[11,"poll",E,E,81,N],[11,"poll",E,E,86,N],[11,"poll",E,E,87,N],[11,"poll",E,E,88,N],[11,"poll",R[155],E,46,N],[11,"poll",R[150],E,79,N],[11,"poll",E,E,82,N],[11,"poll",E,E,83,N],[11,"poll",E,E,84,N],[11,"poll",E,E,85,N],[11,"poll",E,E,89,N],[11,"poll",R[155],E,47,N],[11,R[43],R[148],E,70,N],[11,"eq","actix",E,1,[[["self"],[R[103]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["running"]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[4]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[4]]],["bool"]]],[11,"eq",R[145],E,64,[[["self"],["self"]],["bool"]]],[11,"eq","actix",E,13,[[["self"],["self"]],["bool"]]],[11,"eq",E,E,15,[[["self"],["self"]],["bool"]]],[11,"eq",R[147],E,17,[[["self"],["resolve"]],["bool"]]],[11,"ne",E,E,17,[[["self"],["resolve"]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[17]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[17]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[159]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[159]]],["bool"]]],[11,"eq",R[148],E,25,[[["self"],[R[162]]],["bool"]]],[11,R[160],"actix",E,4,[[],[R[4]]]],[11,R[160],R[81],E,69,[[],["self"]]],[11,R[160],R[146],E,16,[[],["self"]]],[11,R[160],R[147],E,21,[[],[R[18]]]],[11,R[160],R[148],E,70,[[],["self"]]],[11,R[160],E,E,71,[[],["self"]]],[11,R[160],R[155],E,45,[[],["self"]]],[11,"clone","actix",E,1,[[["self"]],[R[103]]]],[11,"clone",E,E,2,[[["self"]],["running"]]],[11,"clone",E,E,4,[[["self"]],[R[4]]]],[11,"clone",E,E,11,[[["self"]],["system"]]],[11,"clone",R[145],E,64,[[["self"]],[R[161]]]],[11,"clone","actix",E,13,[[["self"]],["addr"]]],[11,"clone",E,E,15,[[["self"]],[R[10]]]],[11,"clone",R[148],E,25,[[["self"]],[R[162]]]],[11,"clone",R[153],E,42,[[["self"]],[R[1]]]],[11,"clone",E,E,43,[[["self"]],["self"]]],[11,"from",R[150],E,78,[[[R[6]]],["self"]]],[11,"drop","actix",E,5,[[["self"]]]],[11,"drop",R[145],E,64,[[["self"]]]],[11,"drop",E,E,65,[[["self"]]]],[11,"into","actix",E,13,[[["self"]],[R[10]]]],[11,"fmt",E,E,3,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",R[89],E,48,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",R[147],E,20,[[["self"],[R[163]]],[R[6]]]],[11,"hash","actix",E,4,N],[11,"hash",R[145],E,64,[[["self"],["h"]]]],[11,"hash","actix",E,13,[[["self"],["h"]]]],[11,"hash",E,E,15,[[["self"],["h"]]]],[11,"fmt",E,E,1,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,2,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,4,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,5,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,7,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",R[81],E,62,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,63,[[["self"],[R[163]]],[R[6]]]],[11,"fmt","actix",E,8,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,9,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,10,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,11,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,12,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",R[145],E,64,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",R[89],E,48,[[["self"],[R[163]]],[R[6]]]],[11,"fmt","actix",E,3,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,13,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,14,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",R[81],E,69,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",R[147],E,17,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,18,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,19,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,20,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",R[148],E,25,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,23,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",R[150],E,73,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,27,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,74,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,28,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,75,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,77,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,78,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,79,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,80,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,81,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,82,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,83,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,84,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,85,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,86,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",E,E,87,[[["self"],[R[163]]],[R[6]]]],[11,"fmt",R[153],E,43,[[["self"],[R[163]]],[R[6]]]],[11,"poll",R[89],E,67,[[["self"]],["poll"]]],[11,"poll",E,E,68,[[["self"]],["poll"]]],[11,"poll",R[150],E,28,[[["self"]],["poll"]]],[11,"poll",R[145],E,65,[[["self"]],["poll",["option"]]]],[11,"name","actix",E,3,[[["self"]],["option",["str"]]]],[11,"cause",E,E,3,[[["self"]],["option",["fail"]]]],[11,R[164],E,E,3,[[["self"]],["option",[R[164]]]]],[11,"name",R[147],E,20,[[["self"]],["option",["str"]]]],[11,"cause",E,E,20,[[["self"]],["option",["fail"]]]],[11,R[164],E,E,20,[[["self"]],["option",[R[164]]]]],[11,R[88],R[89],R[90],49,N],[11,R[76],E,R[91],49,N],[11,"stopped",E,R[92],49,N],[11,"start",E,R[93],49,[[["self"]],["addr"]]],[11,R[94],E,R[95],49,[[],["addr"]]],[11,"create",E,R[96],49,[[["f"]],["addr"]]],[11,R[124],E,R[125],52,N],[11,R[79],E,R[112],51,[[["self"],["s"]],[R[4]]]],[11,R[113],E,R[114],51,[[["self"],["s"]]]],[11,"notify",E,R[115],51,[[["self"],["m"]]]],[11,R[116],E,R[117],51,[[["self"],["m"],[R[21]]],[R[4]]]],[11,R[118],E,R[119],51,[[["self"],[R[21]],["f"]],[R[4]]]],[11,R[120],E,R[121],51,[[["self"],[R[21]],["f"]],[R[4]]]],[11,"new",R[81],"Create new ContextParts instance",62,[[[R[167]]],["self"]]],[11,"stop",E,"Initiate stop process for actor execution",62,[[["self"]]]],[11,R[100],E,"Terminate actor execution",62,[[["self"]]]],[11,"state",E,R[66],62,[[["self"]],[R[103]]]],[11,"waiting",E,"Is context waiting for future completion",62,[[["self"]],["bool"]]],[11,"curr_handle",E,"Handle of the running future",62,[[["self"]],[R[4]]]],[11,"spawn",E,"Spawn new future to this context.",62,[[["self"],["f"]],[R[4]]]],[11,"wait",E,"Spawn new future to this context and wait future completion.",62,[[["self"],["f"]]]],[11,R[110],E,"Cancel previously scheduled future.",62,[[["self"],[R[4]]],["bool"]]],[11,R[172],E,E,62,[[["self"]],["usize"]]],[11,R[165],E,E,62,[[["self"],["usize"]]]],[11,R[174],E,E,62,[[["self"]],["addr"]]],[11,R[88],E,E,62,[[["self"]],["bool"]]],[11,"new",E,E,63,[[["c"],["a"],["mailbox"]],["self"]]],[11,"ctx",E,E,63,[[["self"]],["c"]]],[11,R[174],E,E,63,[[["self"]],["addr"]]],[11,"alive",E,E,63,[[["self"]],["bool"]]],[11,R[88],R[89],R[134],56,N],[11,"error",E,R[135],56,N],[11,R[78],E,R[136],56,N],[11,R[79],E,R[137],56,N],[11,R[13],R[145],"Is the channel still open",64,[[["self"]],["bool"]]],[11,"send",E,"Attempts to send a message on this `Sender<A>` with…",64,[[["self"],["m"]],[R[6],[R[168],R[11]]]]],[11,R[12],E,"Attempts to send a message on this `Sender<A>` without…",64,[[["self"],["m"],["bool"]],[R[6],[R[11]]]]],[11,"do_send",E,"Send a message on this `Sender<A>` without blocking.",64,[[["self"],["m"]],[R[6],[R[11]]]]],[11,R[166],E,"Downgrade to `WeakAddressSender` which can later be upgraded",64,[[["self"]],["weakaddresssender"]]],[11,R[13],E,"Returns whether any senders are still connected.",65,[[["self"]],["bool"]]],[11,R[172],E,"Returns the channel capacity.",65,[[["self"]],["usize"]]],[11,R[173],E,"Sets the channel capacity.",65,[[["self"],["usize"]]]],[11,"sender",E,"Returns the sender side of the channel.",65,[[["self"]],[R[161]]]],[11,R[175],E,"Creates the sender producer.",65,[[["self"]],[R[167]]]],[11,"new",R[81],E,66,[[["m"],["option",["sender"]]],["self"]]],[11,"with_proxy",E,E,66,[[["box",["envelopeproxy"]]],["self"]]],[11,R[27],R[89],R[170],67,[[["self"],[R[21]]],["self"]]],[11,"new",E,E,68,[[["option",[R[168]]],["option"]],[R[169]]]],[11,R[27],E,R[170],68,[[["self"],[R[21]]],["self"]]],[11,"into_inner",E,E,48,[[["self"]],[T]]],[11,"new",R[81],E,69,[[[R[171]]],["self"]]],[11,R[172],E,E,69,[[["self"]],["usize"]]],[11,R[173],E,E,69,[[["self"],["usize"]]]],[11,R[13],E,E,69,[[["self"]],["bool"]]],[11,R[174],E,E,69,[[["self"]],["addr"]]],[11,R[175],E,E,69,[[["self"]],[R[167]]]],[11,"poll",E,E,69,N],[11,"new",R[149],"Return a new `Clock` instance that uses the current…",72,[[],["clock"]]],[11,"new_with_now",E,"Return a new `Clock` instance that uses `now` as the…",72,[[[T]],["clock"]]],[11,"system",E,"Return a new `Clock` instance that uses [`Instant::now`]…",72,[[],["clock"]]],[11,"now",E,"Returns an instant corresponding to \"now\" by using the…",72,[[["self"]],["instant"]]]],"p":[[3,R[58]],[4,R[65]],[4,R[0]],[4,R[73]],[3,R[48]],[3,"Arbiter"],[3,R[176]],[3,R[75]],[3,R[60]],[3,R[56]],[3,R[62]],[3,"System"],[3,R[177]],[3,"Addr"],[3,"WeakAddr"],[3,R[51]],[3,"Mocker"],[3,"Resolve"],[3,"Connect"],[3,R[178]],[4,R[179]],[3,R[15]],[3,R[180]],[3,"Signal"],[3,R[181]],[4,R[182]],[8,"Now"],[4,"Either"],[3,"Finish"],[8,R[183]],[8,R[184]],[8,R[185]],[8,R[186]],[8,R[187]],[8,R[188]],[3,"Writer"],[3,R[189]],[3,R[190]],[3,R[191]],[3,"Execute"],[8,R[192]],[8,R[193]],[3,"Registry"],[3,R[194]],[3,R[195]],[3,R[196]],[3,R[197]],[3,R[198]],[4,R[199]],[8,"Actor"],[8,R[97]],[8,R[104]],[8,R[122]],[8,R[200]],[8,"Handler"],[8,"Message"],[8,R[131]],[8,R[201]],[8,R[202]],[8,R[203]],[8,R[204]],[8,R[205]],[3,R[206]],[3,R[207]],[3,R[208]],[3,R[209]],[3,"Envelope"],[3,"Request"],[3,R[80]],[3,"Mailbox"],[3,R[210]],[3,R[211]],[3,"Clock"],[3,"AndThen"],[3,"FromErr"],[3,"Map"],[3,"DropErr"],[3,"MapErr"],[3,R[212]],[3,R[213]],[3,R[214]],[3,R[215]],[3,R[216]],[3,R[217]],[3,R[218]],[3,R[219]],[3,"Then"],[3,R[23]],[3,R[220]],[3,R[221]],[3,R[222]],[6,R[82]],[6,R[84]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);